import{_ as s,M as i,p as l,q as r,R as e,t as a,N as o,a1 as t}from"./framework-96b046e1.js";const c="/learning_note/images/laravel/03/make_migration.png",d="/learning_note/images/laravel/03/database.png",p="/learning_note/images/laravel/03/public_function_down.png",_={},h=t('<h1 id="_03-【資料庫-migration】" tabindex="-1"><a class="header-anchor" href="#_03-【資料庫-migration】" aria-hidden="true">#</a> 03 【資料庫 Migration】</h1><h2 id="_1-建立表單" tabindex="-1"><a class="header-anchor" href="#_1-建立表單" aria-hidden="true">#</a> 1. 建立表單</h2><p>指令： <code>php artisan make:migration create_{migration name}_table</code></p><p>・名稱必須為小寫，並以 <code>s</code> 結尾，例如：<code>users</code>、<code>images</code></p><p>・產生位置： <code>database/migrations</code></p><h2 id="_2-設置資料庫欄位" tabindex="-1"><a class="header-anchor" href="#_2-設置資料庫欄位" aria-hidden="true">#</a> 2. 設置資料庫欄位</h2><p><img src="'+c+'" alt="make_migration"></p><p>寫法：</p><p><code>$table-&gt;資料型態(&#39;欄位名稱&#39;)-&gt;修飾;</code></p><p><code>$table-&gt;string(&#39;title&#39;, 10);</code> 指定長度</p><p><code>$table-&gt;string(&#39;title&#39;)-&gt;nullable();</code> 允許此欄位為 NULL</p><p>資料型態舉例：</p><table><thead><tr><th style="text-align:center;">資料型態</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">integer</td><td style="text-align:center;">可存放-32,768 到32,767 之間的數字</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">最多 65,535 個字元</td></tr><tr><td style="text-align:center;">text</td><td style="text-align:center;">最多 2^16 - 1 字元資料</td></tr><tr><td style="text-align:center;">longText</td><td style="text-align:center;">最多 4,294,967,295 個字符的字串</td></tr><tr><td style="text-align:center;">boolean</td><td style="text-align:center;">True 或 False</td></tr></tbody></table>',13),g={href:"https://laravel.tw/docs/4.2/schema#adding-columns",target:"_blank",rel:"noopener noreferrer"},u=t(`<h2 id="_3-建立資料庫" tabindex="-1"><a class="header-anchor" href="#_3-建立資料庫" aria-hidden="true">#</a> 3. 建立資料庫</h2><p>指令：<code>php artisan migrate</code></p><p>建立完成出現以下訊息</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 建立成功</span>
Migration table created successfully<span class="token operator">.</span>

<span class="token comment">// 被建立的資料庫</span>
Migrating<span class="token punctuation">:</span> <span class="token number">2014_10_12_000000</span>_create_users_table
Migrated<span class="token punctuation">:</span>  <span class="token number">2014_10_12_000000</span>_create_users_table <span class="token punctuation">(</span><span class="token number">0.05</span> seconds<span class="token punctuation">)</span>
Migrating<span class="token punctuation">:</span> <span class="token number">2019_08_19_000000</span>_create_failed_jobs_table
Migrated<span class="token punctuation">:</span>  <span class="token number">2019_08_19_000000</span>_create_failed_jobs_table <span class="token punctuation">(</span><span class="token number">0.04</span> seconds<span class="token punctuation">)</span>
Migrating<span class="token punctuation">:</span> <span class="token number">2023_01_05_135819</span>_create_articles_table
Migrated<span class="token punctuation">:</span>  <span class="token number">2023_01_05_135819</span>_create_articles_table <span class="token punctuation">(</span><span class="token number">0.02</span> seconds<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 HeidiSQL (資料庫可視化工具)中會出現</p><p><img src="`+d+`" alt="database"></p><p>若已經沒有新的表單需要建立會出現以下訊息</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>Nothing to migrate<span class="token operator">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-其他指令操作" tabindex="-1"><a class="header-anchor" href="#_4-其他指令操作" aria-hidden="true">#</a> 4. 其他指令操作</h2><h3 id="_1-rollback" tabindex="-1"><a class="header-anchor" href="#_1-rollback" aria-hidden="true">#</a> 1. Rollback</h3><p><code>php artisan migrate:rollback</code></p><p>會去執行 <code>public function down()</code>，回到上一步動作。</p><p><img src="`+p+'" alt="public_function_down"></p><h3 id="_2-修改表單欄位-新增、刪除・・・" tabindex="-1"><a class="header-anchor" href="#_2-修改表單欄位-新增、刪除・・・" aria-hidden="true">#</a> 2. 修改表單欄位(新增、刪除・・・)</h3><h4 id="_1-新增欄位" tabindex="-1"><a class="header-anchor" href="#_1-新增欄位" aria-hidden="true">#</a> 1. 新增欄位</h4><p>例：新增 <code>images</code> 欄位至 <code>article</code> 表單</p><p>流程：</p><ol><li>建立新表單</li></ol><p><code>php artisan make:migration add_images_to_articles_table</code></p><ol start="2"><li>新增欄位</li></ol><p><code>$table-&gt;longText(&#39;images&#39;);</code></p><ol start="3"><li>建立置資料庫</li></ol><p><code>php artisan migrate</code></p><h4 id="_2-修改欄位類型、屬性" tabindex="-1"><a class="header-anchor" href="#_2-修改欄位類型、屬性" aria-hidden="true">#</a> 2. 修改欄位類型、屬性</h4><p>例：修改 <code>article</code> 表單中 <code>images</code> 的欄位類型及屬性</p><p>流程：</p><ol><li>建立新表單</li></ol><p><code>php artisan make:migration change_images_to_articles_table</code></p><ol start="2"><li>修改欄位</li></ol><p><code>$table-&gt;string(&#39;images&#39;)-&gt;nullable()-&gt;change();</code></p><ol start="3"><li>建立置資料庫</li></ol><p><code>php artisan migrate</code></p><h4 id="_3-刪除欄位" tabindex="-1"><a class="header-anchor" href="#_3-刪除欄位" aria-hidden="true">#</a> 3. 刪除欄位</h4><p>例：從 <code>article</code> 表單中刪除 <code>images</code> 欄位</p><p>流程：</p><ol><li>建立新表單</li></ol><p><code>php artisan make:migration delete_images_to_articles_table</code></p><ol start="2"><li>配置要刪除的欄位</li></ol><p><code>$table-&gt;dropColumn(&#39;images&#39;);</code></p><ol start="3"><li>建立置資料庫</li></ol><p><code>php artisan migrate</code></p>',41);function m(b,k){const n=i("ExternalLinkIcon");return l(),r("div",null,[h,e("p",null,[a("詳細："),e("a",g,[a("Laravel-欄位型態"),o(n)])]),u])}const x=s(_,[["render",m],["__file","03.html.vue"]]);export{x as default};
