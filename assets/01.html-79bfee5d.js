import{_ as e,p as t,q as c,a1 as o}from"./framework-96b046e1.js";const i={},d=o('<h1 id="_01-【準備】" tabindex="-1"><a class="header-anchor" href="#_01-【準備】" aria-hidden="true">#</a> 01 【準備】</h1><h2 id="_1-安裝-typescript" tabindex="-1"><a class="header-anchor" href="#_1-安裝-typescript" aria-hidden="true">#</a> 1.安裝 TypeScript</h2><p><code>npm install -g typescript</code></p><h2 id="_2-配置自動編譯" tabindex="-1"><a class="header-anchor" href="#_2-配置自動編譯" aria-hidden="true">#</a> 2. 配置自動編譯</h2><ol><li><p><code>cd</code> 至專案資料夾</p></li><li><p>輸入 <code>tsc --init</code> 建立 <code>tsconfig.json</code></p></li><li><p>修改 <code>&quot;outDir&quot;: &quot;./js&quot;</code>，編譯好的文件會在 <code>./js</code> 中產生</p></li><li><p>測試：新增一個 <code>ts</code> 檔案，輸入<code>let str:string=&quot;hello&quot;</code></p></li><li><p>Terminal -&gt; Run Task -&gt; 搜尋 TypeScript -&gt; tsc: watch -tscconfig.json 或 輸入<code>tsc -w</code></p></li><li><p>ts檔案會自動產生於./js資料夾</p></li></ol>',5),a=[d];function s(r,l){return t(),c("div",null,a)}const p=e(i,[["render",s],["__file","01.html.vue"]]);export{p as default};
