import{_ as n,p as a,q as e,a1 as t}from"./framework-96b046e1.js";const s="/learning_note/images/spring/08/spring_web_1.png",o={},i=t('<h1 id="_08-【-spring-web-】" tabindex="-1"><a class="header-anchor" href="#_08-【-spring-web-】" aria-hidden="true">#</a> 08 【 Spring Web 】</h1><h2 id="_1-spring整合web" tabindex="-1"><a class="header-anchor" href="#_1-spring整合web" aria-hidden="true">#</a> 1. Spring整合web</h2><h3 id="_1-javaweb三大組件" tabindex="-1"><a class="header-anchor" href="#_1-javaweb三大組件" aria-hidden="true">#</a> 1. JavaWeb三大組件</h3><p><img src="'+s+`" alt="JavaWeb三大組件"></p><p>在進行Java開發時要遵循三層架構+MVC，Spring操作最核心的就是Spring容器，Web層需要注入Service層，Service層需要注入Dao（Mapper），Controller層使用Servlet技術的話，需要在Servlet中取得Spring容器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">AnnotationconfigApplicationcontext</span> applicationcontext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationconfigApplicationcontext</span><span class="token punctuation">(</span><span class="token class-name">ApplicationcontextConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>；
<span class="token class-name">AccountService</span> accountService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AccountService</span><span class="token punctuation">)</span>applicationContext·getBean（<span class="token string">&quot;accountservice&quot;</span>）；
accountService<span class="token punctuation">.</span>transferMoney（<span class="token string">&quot;tom&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lucy&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span>）；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>如果Web層都編寫AnnotationConfigApplicationContext的程式碼，表示配置類會重複載入，Spring容器會重複被建立</p></blockquote><h4 id="問題" tabindex="-1"><a class="header-anchor" href="#問題" aria-hidden="true">#</a> 問題：</h4><p>・ ApplicationContext建立一次，配置類載入一次</p><p>・ web服務器啟動時就建立Spring容器，後續直接從容器中獲取Bean使用即可</p><p>・ ApplicationContext的引用需要在Web層任何位置都可以取得</p><h4 id="解決" tabindex="-1"><a class="header-anchor" href="#解決" aria-hidden="true">#</a> 解決：</h4><p>・ 在ServletContextListener的contextlnitialized方法中執行ApplicationContext的建立。或在Servlet的init方法中執行ApplicationContext的建立，並給Servlet的load-on-startup屬性一個數字值，確保伺服器啟動Servlet就創建</p><p>・ 將創建好的ApplicationContext儲存到Servletcontext域中，這樣整個Web層任何位置都可以取得</p>`,14),p=[i];function c(r,l){return a(),e("div",null,p)}const u=n(o,[["render",c],["__file","08.html.vue"]]);export{u as default};
