import{_ as s,p as n,q as a,a1 as e}from"./framework-96b046e1.js";const t="/learning_note/images/mysql/05/cartesian_product.png",p="/learning_note/images/mysql/05/inner_join.png",o="/learning_note/images/mysql/05/left_join_right_join.png",c={},l=e(`<h1 id="_05-【-連接查詢-】" tabindex="-1"><a class="header-anchor" href="#_05-【-連接查詢-】" aria-hidden="true">#</a> 05 【 連接查詢 】</h1><blockquote><p>從多張表單中查詢資料(例如：查詢學生資料時需要同時查詢學生的班級資料)，可以通過連接查詢從多張資料表單取得資料。</p><p>在MySQL中可以使用 <code>join</code> 實現多張表單的連接查詢，按照其功能不同分為三個操作</p><blockquote><p>・ inner join 內連接</p></blockquote><blockquote><p>・ left join 左連接</p></blockquote><blockquote><p>・ right join 右連接</p></blockquote></blockquote><h2 id="_1-資料準備" tabindex="-1"><a class="header-anchor" href="#_1-資料準備" aria-hidden="true">#</a> 1. 資料準備</h2><h3 id="_1-建立-班級表單-和-學生表單" tabindex="-1"><a class="header-anchor" href="#_1-建立-班級表單-和-學生表單" aria-hidden="true">#</a> 1. 建立 班級表單 和 學生表單</h3><blockquote><p>班級表單</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> classes<span class="token punctuation">(</span>
    class_id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    class_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">unique</span><span class="token punctuation">,</span>
    class_remark <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>學生表單</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> students<span class="token punctuation">(</span>
    stu_num <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    stu_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    stu_gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    stu_age <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    cid <span class="token keyword">int</span><span class="token punctuation">,</span>
    <span class="token keyword">constraint</span> FK_STUDENTS_CLASS <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>cid<span class="token punctuation">)</span> <span class="token keyword">references</span> classes<span class="token punctuation">(</span>class_id<span class="token punctuation">)</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CASCADE</span> <span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-添加班級、學生資料" tabindex="-1"><a class="header-anchor" href="#_2-添加班級、學生資料" aria-hidden="true">#</a> 2. 添加班級、學生資料</h3><blockquote><p>班級資料</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// Java2104包含三個學生資料</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> classes<span class="token punctuation">(</span>class_name<span class="token punctuation">,</span>class_remark<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;Java2104&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Java2105包含三個學生資料</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> classes<span class="token punctuation">(</span>class_name<span class="token punctuation">,</span>class_remark<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;Java2105&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 在學生表單中沒有關聯的資料</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> classes<span class="token punctuation">(</span>class_name<span class="token punctuation">,</span>class_remark<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;Java2108&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> classes<span class="token punctuation">(</span>class_name<span class="token punctuation">,</span>class_remark<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;Python2106&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>學生資料</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 屬於class=&#39;1&#39;(Java2104)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> students<span class="token punctuation">(</span>stu_num<span class="token punctuation">,</span>stu_name<span class="token punctuation">,</span>stu_gender<span class="token punctuation">,</span>stu_age<span class="token punctuation">,</span>cid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;20220201&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> students<span class="token punctuation">(</span>stu_num<span class="token punctuation">,</span>stu_name<span class="token punctuation">,</span>stu_gender<span class="token punctuation">,</span>stu_age<span class="token punctuation">,</span>cid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;20220202&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> students<span class="token punctuation">(</span>stu_num<span class="token punctuation">,</span>stu_name<span class="token punctuation">,</span>stu_gender<span class="token punctuation">,</span>stu_age<span class="token punctuation">,</span>cid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;20220203&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 屬於class=&#39;2&#39;(Java2105)</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> students<span class="token punctuation">(</span>stu_num<span class="token punctuation">,</span>stu_name<span class="token punctuation">,</span>stu_gender<span class="token punctuation">,</span>stu_age<span class="token punctuation">,</span>cid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;20220204&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name4&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> students<span class="token punctuation">(</span>stu_num<span class="token punctuation">,</span>stu_name<span class="token punctuation">,</span>stu_gender<span class="token punctuation">,</span>stu_age<span class="token punctuation">,</span>cid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;20220205&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name5&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> students<span class="token punctuation">(</span>stu_num<span class="token punctuation">,</span>stu_name<span class="token punctuation">,</span>stu_gender<span class="token punctuation">,</span>stu_age<span class="token punctuation">,</span>cid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;20220206&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name6&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 沒有設定與班級表單中的資料關聯</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> students<span class="token punctuation">(</span>stu_num<span class="token punctuation">,</span>stu_name<span class="token punctuation">,</span>stu_gender<span class="token punctuation">,</span>stu_age<span class="token punctuation">,</span>cid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;20220207&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name7&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> students<span class="token punctuation">(</span>stu_num<span class="token punctuation">,</span>stu_name<span class="token punctuation">,</span>stu_gender<span class="token punctuation">,</span>stu_age<span class="token punctuation">,</span>cid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;20220208&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name8&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> classes<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-內連接-inner-join" tabindex="-1"><a class="header-anchor" href="#_2-內連接-inner-join" aria-hidden="true">#</a> 2. 內連接 INNER JOIN</h2><p>語法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>tableName1<span class="token operator">&gt;</span> students <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token operator">&lt;</span>tableName2<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-笛卡爾積" tabindex="-1"><a class="header-anchor" href="#_1-笛卡爾積" aria-hidden="true">#</a> 1. 笛卡爾積</h3><blockquote><p>如果直接執行<code>select ... from &lt;tableName&gt; students INNER JOIN &lt;tableName&gt;;</code>，會取得兩種資料表單中的資料集合的笛卡爾積(依次使用tableName1表單中的每一條資料去匹配tableName2的每一條資料)</p></blockquote><blockquote><p>笛卡爾積(A集合&amp;B集合)：使用A中的每一條資料關聯一次B中的每一條資料，笛卡爾積的總數=A總數*B總數</p></blockquote><h4 id="直接使用select-from-students-inner-join-classes-的結果" tabindex="-1"><a class="header-anchor" href="#直接使用select-from-students-inner-join-classes-的結果" aria-hidden="true">#</a> 直接使用<code>select * from students INNER JOIN classes;</code>的結果：</h4><p><img src="`+t+'" alt="Cartesian product"></p><h3 id="_2-內連接條件-inner-join" tabindex="-1"><a class="header-anchor" href="#_2-內連接條件-inner-join" aria-hidden="true">#</a> 2. 內連接條件 INNER JOIN</h3><blockquote><p>兩張表單時使用 INNER JOIN 之後產生的笛卡爾積資料中很多的資料都是無意義的，需要增加兩張表單進行連接查詢時的條件</p></blockquote><p><img src="'+p+`" alt="inner_join"></p><h4 id="_1-where" tabindex="-1"><a class="header-anchor" href="#_1-where" aria-hidden="true">#</a> 1. where</h4><blockquote><p>使用where連接過濾條件，先成立笛卡爾積再從中過濾資料(效率低)</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> classes <span class="token keyword">where</span> students<span class="token punctuation">.</span>cid <span class="token operator">=</span> classes<span class="token punctuation">.</span>class_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-on" tabindex="-1"><a class="header-anchor" href="#_2-on" aria-hidden="true">#</a> 2. ON</h4><blockquote><p>使用ON連接查詢條件，先判斷條件是否成立，如果成立將兩個表單的資料進行組合生成一筆結果</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> classes <span class="token keyword">on</span> students<span class="token punctuation">.</span>cid <span class="token operator">=</span> classes<span class="token punctuation">.</span>class_id <span class="token punctuation">[</span><span class="token keyword">where</span> stu_gender<span class="token operator">=</span><span class="token string">&#39;men&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>只會取得兩個表單中符合條件成立的資料，任何一張表單在另一張表單中如果沒有找到對應的資料就不會出現在查詢的結果中</p></blockquote><h3 id="_3-左連接-left-join-右連接-right-join" tabindex="-1"><a class="header-anchor" href="#_3-左連接-left-join-右連接-right-join" aria-hidden="true">#</a> 3. 左連接 LEFT JOIN　右連接 RIGHT JOIN</h3><blockquote><p>需求：查詢出所有的學生資料，如果有學生資料中有對應的班級資料，則將對應的班級資料也查詢出來</p></blockquote><p>語法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>leftTable<span class="token operator">&gt;</span> <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> <span class="token operator">&lt;</span>rightTable<span class="token operator">&gt;</span> <span class="token keyword">ON</span> 符合條件 <span class="token punctuation">[</span><span class="token keyword">where</span> 條件<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_1-左連接" tabindex="-1"><a class="header-anchor" href="#_1-左連接" aria-hidden="true">#</a> 1. 左連接</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 顯示左表單的所有資料, 如果在右表單中存在符合條件的資料則顯示, 反之則顯示Null</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> classes <span class="token keyword">ON</span> students<span class="token punctuation">.</span>cid <span class="token operator">=</span> classes<span class="token punctuation">.</span>class_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-右連接" tabindex="-1"><a class="header-anchor" href="#_2-右連接" aria-hidden="true">#</a> 2. 右連接</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 顯示右表單的所有資料, 如果左表單中中存在符合條件的資料則顯示, 反之則顯示Null</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> classes <span class="token keyword">ON</span> students<span class="token punctuation">.</span>cid <span class="token operator">=</span> classes<span class="token punctuation">.</span>class_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+o+`" alt="left_join_right_join"></p><h3 id="_4-資料表別名" tabindex="-1"><a class="header-anchor" href="#_4-資料表別名" aria-hidden="true">#</a> 4. 資料表別名</h3><blockquote><p>如果在連接查詢的多張表單中存在相同名稱的字段，可以使用 <code>表單名稱.字段名稱</code> 來進行區分；如果表單名稱過長則不便於SQL語句的編寫，可以使用資料表別名</p></blockquote><p>舉例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> s<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>c<span class="token punctuation">.</span>class_name <span class="token comment">// 顯示s的所有資料、c的class_name</span>
<span class="token keyword">from</span> students s <span class="token comment">// 設定別名</span>
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> classes c <span class="token comment">// 設定別名</span>
<span class="token keyword">ON</span> s<span class="token punctuation">.</span>cid<span class="token operator">=</span>c<span class="token punctuation">.</span>class_id<span class="token punctuation">;</span> <span class="token comment">// (別名.字段名稱)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-子查詢-嵌套查詢" tabindex="-1"><a class="header-anchor" href="#_1-子查詢-嵌套查詢" aria-hidden="true">#</a> 1. 子查詢 / 嵌套查詢</h4><blockquote><p>子查詢 --先進行一次查詢，第一次查詢結果做為第二次查詢的根據/條件</p></blockquote><h5 id="案例-1-查詢班級名稱為-java2104-班級中的學生資料-只知道班級名稱-不知道班級id" tabindex="-1"><a class="header-anchor" href="#案例-1-查詢班級名稱為-java2104-班級中的學生資料-只知道班級名稱-不知道班級id" aria-hidden="true">#</a> 案例(1)：查詢班級名稱為&#39;Java2104&#39;班級中的學生資料(只知道班級名稱, 不知道班級id)</h5><blockquote><p>子查詢返回單個值--單行單列</p></blockquote><h6 id="傳統方式" tabindex="-1"><a class="header-anchor" href="#傳統方式" aria-hidden="true">#</a> 傳統方式：</h6><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 1.查詢&#39;Java2104&#39;的班級編號</span>
<span class="token keyword">select</span> class_id <span class="token keyword">from</span> classes <span class="token keyword">where</span> class_name<span class="token operator">=</span><span class="token string">&#39;Java2104&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 2.查詢此班級編號裡面的學生資料</span>
<span class="token keyword">select</span> <span class="token operator">*</span> students <span class="token keyword">where</span> cid<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="子查詢" tabindex="-1"><a class="header-anchor" href="#子查詢" aria-hidden="true">#</a> 子查詢：</h6><p>如果返回的結果是一個值(單列單行), 條件可以使用關係運算符(<code>=</code>、<code>!=</code>、<code>&gt;</code>、<code>&lt;</code>・・・)</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> cid<span class="token operator">=</span><span class="token punctuation">(</span>
    <span class="token keyword">select</span> class_id <span class="token keyword">from</span> classes <span class="token keyword">where</span> class_name<span class="token operator">=</span><span class="token string">&#39;Java2104&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="案例-2-查詢所有java班中的學生資料" tabindex="-1"><a class="header-anchor" href="#案例-2-查詢所有java班中的學生資料" aria-hidden="true">#</a> 案例(2)：查詢所有Java班中的學生資料</h5><blockquote><p>子查詢返回多個值--多行多單列</p></blockquote><h6 id="傳統方式-1" tabindex="-1"><a class="header-anchor" href="#傳統方式-1" aria-hidden="true">#</a> 傳統方式：</h6><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 1.查詢所有Java班的班級編號</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> classes <span class="token keyword">where</span> class_name <span class="token operator">LIKE</span> <span class="token string">&#39;Java%&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 2.查詢這些班級編號的學生資料</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> cid<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">UNION</span> <span class="token comment">// 將多個查詢語句的結果拼接在一起</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> cid<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">UNION</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> cid<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="子查詢-1" tabindex="-1"><a class="header-anchor" href="#子查詢-1" aria-hidden="true">#</a> 子查詢：</h6><p>如果返回的結果是多個值(單列多行), 條件使用<code>IN</code> / <code>NOT IN</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> cid <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> classes <span class="token keyword">where</span> class_name <span class="token operator">LIKE</span> <span class="token string">&#39;Java%&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="案例-3-查詢所有cid-1班級中性別為men的學生資料" tabindex="-1"><a class="header-anchor" href="#案例-3-查詢所有cid-1班級中性別為men的學生資料" aria-hidden="true">#</a> 案例(3)：查詢所有cid=1班級中性別為men的學生資料</h5><blockquote><p>子查詢返回多個值--多行多列</p></blockquote><h6 id="多條件查詢" tabindex="-1"><a class="header-anchor" href="#多條件查詢" aria-hidden="true">#</a> 多條件查詢：</h6><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> cid<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> stu_gender<span class="token operator">=</span><span class="token string">&#39;men&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h6 id="子查詢-2" tabindex="-1"><a class="header-anchor" href="#子查詢-2" aria-hidden="true">#</a> 子查詢：</h6><p>先查詢cid=1班級中的所有學生資料，將這些資料作為一個整體虛擬表單，再基於這個虛擬表單查詢性別為men的學生資料(虛擬表單需要別名)</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>seslect <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> students <span class="token keyword">where</span> cid<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> t <span class="token keyword">where</span> t<span class="token punctuation">.</span>stu_gender<span class="token operator">=</span><span class="token string">&#39;men&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,67),i=[l];function u(r,d){return n(),a("div",null,i)}const m=s(c,[["render",u],["__file","05.html.vue"]]);export{m as default};
