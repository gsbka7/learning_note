import{_ as a,p as e,q as i,a1 as r}from"./framework-96b046e1.js";const t="/learning_note/images/interview/02/aop_1.png",n={},h=r('<h1 id="_02-【-交易管理-】" tabindex="-1"><a class="header-anchor" href="#_02-【-交易管理-】" aria-hidden="true">#</a> 02 【 交易管理 】</h1><h2 id="_1-acid" tabindex="-1"><a class="header-anchor" href="#_1-acid" aria-hidden="true">#</a> 1. ACID</h2><p>・ 原子性（Atomicity）：交易管理是不可分割的最小操作單元，操作會全部成功，或者全部失敗</p><p>・ 一致性（Consistency）：交易管理完成時，必須使所有的資料都保持一致狀態</p><p>・ 隔離性（Isolation）：資料庫系統提供的隔離機制，保證交易管理在不受外部操作影響的獨立環境下執行</p><p>・ 持久性（Durability）：交易管理一旦提交或回滾，它對資料庫中的資料的改變就是永久的</p><h2 id="_2-併發帶來的問題" tabindex="-1"><a class="header-anchor" href="#_2-併發帶來的問題" aria-hidden="true">#</a> 2. 併發帶來的問題</h2><h4 id="併發交易管理問題-髒讀、不可重複讀、幻讀" tabindex="-1"><a class="header-anchor" href="#併發交易管理問題-髒讀、不可重複讀、幻讀" aria-hidden="true">#</a> 併發交易管理問題：髒讀、不可重複讀、幻讀</h4><p>・ 髒讀：一個交易管理讀到另外一個交易管理還沒有提交的資料</p><p>・ 不可重複讀：一個交易管理先後讀取同一條記錄，但兩次讀取的資料結果不同，稱之為不可重覆讀</p><p>・ 幻讀：一個交易管理按照條件查詢資料時，沒有對應的資料行，但是在插入資料時，又發現這行資料已經存在，好像出現了幻影。</p><h4 id="隔離級別-讀未提交、讀已提交、可重複讀、串行化" tabindex="-1"><a class="header-anchor" href="#隔離級別-讀未提交、讀已提交、可重複讀、串行化" aria-hidden="true">#</a> 隔離級別：讀未提交、讀已提交、可重複讀、串行化</h4><p><img src="'+t+'" alt="EXPLAIN"></p><blockquote><p>隔離級別越高，資料越安全，但性能越低</p></blockquote>',14),c=[h];function d(o,s){return e(),i("div",null,c)}const p=a(n,[["render",d],["__file","02.html.vue"]]);export{p as default};
