import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const e="/learning_note/images/php/08/format.jpg",p="/learning_note/images/php/08/fopen.jpg",o={},i=t(`<h1 id="_08-【-php-實作-】" tabindex="-1"><a class="header-anchor" href="#_08-【-php-實作-】" aria-hidden="true">#</a> 08 【 PHP 實作 】</h1><h2 id="_1-printf" tabindex="-1"><a class="header-anchor" href="#_1-printf" aria-hidden="true">#</a> 1. printf</h2><h3 id="_1-轉換符號" tabindex="-1"><a class="header-anchor" href="#_1-轉換符號" aria-hidden="true">#</a> 1. 轉換符號</h3><p>使用 printf 在字串中放置特殊的格式化字元來控制輸出的格式。</p><p>舉例：</p><p>將 <code>%d</code>替換成 <code>%b</code>，3會被顯示為二進制(11)</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;%d&lt;Br&gt;&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;%b&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 11</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">符號</th><th style="text-align:center;">對參數的轉換動作</th></tr></thead><tbody><tr><td style="text-align:center;">%</td><td style="text-align:center;">顯示 % 字元</td></tr><tr><td style="text-align:center;">b</td><td style="text-align:center;">顯示 二進制</td></tr><tr><td style="text-align:center;">c</td><td style="text-align:center;">顯示 ASCII 字元</td></tr><tr><td style="text-align:center;">d</td><td style="text-align:center;">顯示 正負數的十進制整數</td></tr><tr><td style="text-align:center;">e</td><td style="text-align:center;">顯示 科學表示法</td></tr><tr><td style="text-align:center;">f</td><td style="text-align:center;">顯示 浮點數</td></tr><tr><td style="text-align:center;">o</td><td style="text-align:center;">顯示 八進制</td></tr><tr><td style="text-align:center;">s</td><td style="text-align:center;">顯示 字串</td></tr><tr><td style="text-align:center;">u</td><td style="text-align:center;">顯示 無正負數十進制</td></tr><tr><td style="text-align:center;">x</td><td style="text-align:center;">顯示 小寫的十六進制</td></tr><tr><td style="text-align:center;">y</td><td style="text-align:center;">顯示 大寫的十六進制</td></tr></tbody></table><p>可以在 printf 函式中使用任何數量的轉換符號，只要傳遞相同數量的參數，並且在每一個轉換符號的前面加上一個 <code>%</code> 符號即可。</p><p>舉例：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;My name is %s.I&#39;m %d years old, which is 21 in hexadecimal&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Simon&quot;</span><span class="token punctuation">,</span> <span class="token number">33</span> <span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HTML使用十進制來設定顏色</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;&lt;span style=&#39;color:#%X%X%X&#39;&gt;Hello&lt;/span&gt;&quot;</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">245</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 使用參數與運算式</span>
    <span class="token variable">$r</span> <span class="token operator">=</span> <span class="token number">65</span><span class="token punctuation">;</span> <span class="token variable">$g</span> <span class="token operator">=</span> <span class="token number">127</span><span class="token punctuation">;</span> <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">245</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;&lt;span style=&#39;color:#%X%X%X&#39;&gt;Hello&lt;/span&gt;&quot;</span><span class="token punctuation">,</span> <span class="token variable">$r</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token variable">$g</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-設定精確度" tabindex="-1"><a class="header-anchor" href="#_2-設定精確度" aria-hidden="true">#</a> 2. 設定精確度</h3><p>舉例：</p><p>123.42 / 12 = 10.285</p><p>顯示小數點後兩位</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;$%.2f&quot;</span><span class="token punctuation">,</span> <span class="token number">123.42</span> <span class="token operator">/</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10.29</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-設定精確度" tabindex="-1"><a class="header-anchor" href="#_1-設定精確度" aria-hidden="true">#</a> 1. 設定精確度</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// 填補成 15 個字元</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;$%15f\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123.42</span> <span class="token operator">/</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 用零填補制 15 個字元</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;$%015f\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123.42</span> <span class="token operator">/</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 填補成 15 個字元，精確為小樹底後兩位</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;$%15.2f\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123.42</span> <span class="token operator">/</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 用零填補成 15 個字元，精確度為小數點後兩位</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;$%015.2f\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123.42</span> <span class="token operator">/</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 用 # 符號填補成 15 個字元，精確度為小數點後兩位</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;$&#39;%#15.2f\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">123.42</span> <span class="token operator">/</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/*
        $      10.285000
        $00000010.285000
        $          10.29
        $000000000010.29
        $&#39;          10.29
    */</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-字串填補" tabindex="-1"><a class="header-anchor" href="#_2-字串填補" aria-hidden="true">#</a> 2. 字串填補</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&quot;</span><span class="token punctuation">;</span>

    <span class="token variable">$h</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Resmus&quot;</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[%s]\\n&quot;</span><span class="token punctuation">,</span>            <span class="token variable">$h</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 標準字串輸出</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[%12s]\\n&quot;</span><span class="token punctuation">,</span>          <span class="token variable">$h</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用空格填至 12 寬，並向右靠</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[%-12s]\\n&quot;</span><span class="token punctuation">,</span>         <span class="token variable">$h</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用空格，向左靠</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[%012s]\\n&quot;</span><span class="token punctuation">,</span>         <span class="token variable">$h</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用零來填補</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[%&#39;#12s]\\n\\n&quot;</span><span class="token punctuation">,</span>      <span class="token variable">$h</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用自定的填補字元 &#39;</span><span class="token comment">#&#39;</span>

    <span class="token variable">$d</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Resmus Lerdorf&quot;</span><span class="token punctuation">;</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[%12.8s]\\n&quot;</span><span class="token punctuation">,</span>        <span class="token variable">$d</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 向右靠，截成 8 個字元</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[%-12.12s]\\n&quot;</span><span class="token punctuation">,</span>      <span class="token variable">$d</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 向左靠，截成 12 個字元</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[%-&#39;@12.10s]\\n&quot;</span><span class="token punctuation">,</span>    <span class="token variable">$d</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 向左靠，用 &#39;@&#39; 填補，截成 10個字元</span>

    <span class="token comment">/*
        [Resmus]
        [      Resmus]
        [Resmus      ]
        [000000Resmus]
        [######Resmus]

        [    Resmus L]
        [Resmus Lerdo]
        [Resmus Ler@@]
    */</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-使用-sprintf" tabindex="-1"><a class="header-anchor" href="#_3-使用-sprintf" aria-hidden="true">#</a> 3. 使用 sprintf</h4><p>如果不想輸出轉換的結果，而是想在程式的其他地方使用，可使用 <code>sprintf</code>將結果傳給其他變數，而不是瀏覽器</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$hexstring</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;%X%X%X&quot;</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">245</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token variable">$hexstring</span><span class="token punctuation">;</span> <span class="token comment">// 417FF5</span>

    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span>

    <span class="token variable">$out</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;$%.2f&quot;</span><span class="token punctuation">,</span> <span class="token number">124.42</span> <span class="token operator">/</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token variable">$out</span><span class="token punctuation">;</span> <span class="token comment">// $10.37</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-日期與時間函式" tabindex="-1"><a class="header-anchor" href="#_2-日期與時間函式" aria-hidden="true">#</a> 2. 日期與時間函式</h2><h3 id="_1-time" tabindex="-1"><a class="header-anchor" href="#_1-time" aria-hidden="true">#</a> 1. time()</h3><p>PHP 使用標準的 Unix 時戳來追蹤日期與時間，從 1970 年 1 月 1 日算起的秒數</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>取得下星期同一時間的時戳</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">echo</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">7</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span> <span class="token comment">// 7天 * 24小時 * 60分 * 60秒</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>顯示1970 年 1 月 1 日算起至 2000 年 1 月 1 日 1 時 1 分 1 秒的秒數</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">echo</span> <span class="token function">mktime</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 946681200</span>

    <span class="token comment">/*
    小時(0 - 23)
    分(0 - 59)
    秒(0 - 59)
    月(1- 12)
    日(1- 31)
    年(1970 - 2038)
    */</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-date" tabindex="-1"><a class="header-anchor" href="#_2-date" aria-hidden="true">#</a> 2. date()</h3><p>顯示日期</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">date</span><span class="token punctuation">(</span><span class="token variable">$format</span><span class="token punctuation">,</span> <span class="token variable">$timestamp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>舉例：</p><p>顯示目前的時間與日期</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;l F jS, Y - g:ia&quot;</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">echo</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;y&#39;</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;m&#39;</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+e+`" alt="date函式的主要格式符號"></p><h3 id="_3-時間常數" tabindex="-1"><a class="header-anchor" href="#_3-時間常數" aria-hidden="true">#</a> 3. 時間常數</h3><p>DATE_ATOM</p><p>PHP格式： <code>Y-m-d\\TH:i:sP</code></p><p>範例： 2023-02-09T10:46:32+01:00</p><p>DATE_COOKIE</p><p>PHP格式： <code>l, d-M-y H:i:sT</code></p><p>範例： Thursday, 09-Feb-2023 10:46:32 CET</p><p>DATE_RSS</p><p>PHP格式： <code>D, d M Y H:i:s O</code></p><p>範例： Thu, 09 Feb 2023 10:46:32 +0100</p><p>DATE_W3C</p><p>PHP格式： <code>Ym-d\\TH:i:sP</code></p><p>範例： 2023-02-09T10:46:32+01:00</p><h3 id="_4-chekcdate" tabindex="-1"><a class="header-anchor" href="#_4-chekcdate" aria-hidden="true">#</a> 4. chekcdate</h3><p>確認送出的日期是否有效</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>    <span class="token variable">$month</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token variable">$day</span> <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>
    <span class="token variable">$year</span> <span class="token operator">=</span> <span class="token number">2023</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkdate</span><span class="token punctuation">(</span><span class="token variable">$month</span><span class="token punctuation">,</span> <span class="token variable">$day</span><span class="token punctuation">,</span> <span class="token variable">$year</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Date is valid&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Date is invalid&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-檔案處理" tabindex="-1"><a class="header-anchor" href="#_3-檔案處理" aria-hidden="true">#</a> 3. 檔案處理</h2><h3 id="_1-檢查檔案是否存在" tabindex="-1"><a class="header-anchor" href="#_1-檢查檔案是否存在" aria-hidden="true">#</a> 1. 檢查檔案是否存在</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>file_exists()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>範例：</p><p>檢查 <code>textfile.txt</code> 是否存在</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;textfile.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;File exists&quot;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-建立檔案" tabindex="-1"><a class="header-anchor" href="#_2-建立檔案" aria-hidden="true">#</a> 2. 建立檔案</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$fh</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;testfile.txt&quot;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Failed to create file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">_END</span>
    Line1
    Line2
    Line3
    <span class="token constant">_END</span><span class="token punctuation">;</span>

    <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token variable">$text</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Could not write to file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;File &#39;testfile.txt&#39; written successfully&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>fopen的第二個參數</p><p><img src="`+p+`" alt="fopen提供的模式"></p><h3 id="_3-讀取檔案" tabindex="-1"><a class="header-anchor" href="#_3-讀取檔案" aria-hidden="true">#</a> 3. 讀取檔案</h3><h4 id="_1-fgets" tabindex="-1"><a class="header-anchor" href="#_1-fgets" aria-hidden="true">#</a> 1. fgets()</h4><p>抓取整行文字</p><blockquote><p>會得到第一行</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$fh</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;testfile.txt&quot;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;File does not exist or you lack permission to open it&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token variable">$line</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-fread" tabindex="-1"><a class="header-anchor" href="#_2-fread" aria-hidden="true">#</a> 2. fread()</h4><p>取得多行或某幾行文字</p><blockquote><p>會得到第 n 個字元</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$fh</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;testfile.txt&quot;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;File does not exist or you lack permission to open it&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Lin</span>
    <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Line1 Line2 Line3</span>
    <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token variable">$line</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-複製檔案" tabindex="-1"><a class="header-anchor" href="#_4-複製檔案" aria-hidden="true">#</a> 4. 複製檔案</h3><h4 id="copy" tabindex="-1"><a class="header-anchor" href="#copy" aria-hidden="true">#</a> copy()</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">copy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;testfile.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;testfile2.txt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Could not copy file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;File successfully copied to &#39;testfile2.txt&#39;&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另一種寫法</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;testfile.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;testfile2.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Could not copy file&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;File successfully copied to &#39;testfile2.txt&#39;&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-移動檔案" tabindex="-1"><a class="header-anchor" href="#_5-移動檔案" aria-hidden="true">#</a> 5. 移動檔案</h3><h4 id="rename" tabindex="-1"><a class="header-anchor" href="#rename" aria-hidden="true">#</a> rename()</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">rename</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;testfile2.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;testfile.new&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Could not rename file&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;File successfully renamed to &#39;testfile2.new&#39;&quot;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-刪除檔案" tabindex="-1"><a class="header-anchor" href="#_6-刪除檔案" aria-hidden="true">#</a> 6. 刪除檔案</h3><h4 id="unlink" tabindex="-1"><a class="header-anchor" href="#unlink" aria-hidden="true">#</a> unlink()</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;testfile.new&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Could not delete file&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;File &#39;testfile2.new&#39; successfully deleted&#39;&quot;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-更新檔案" tabindex="-1"><a class="header-anchor" href="#_7-更新檔案" aria-hidden="true">#</a> 7. 更新檔案</h3><blockquote><p>將第一行文字複製至最尾端</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$fh</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;testfile.txt&quot;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r+&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Faild to open file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 以讀取與寫入模式打開檔案</span>
    <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 讀取出第一行</span>
    <span class="token function">fseek</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">SEEK_END</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 將檔案指標移到檔尾</span>
    <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$text</span></span>&quot;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Could not write to file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 寫入$text變數中儲存的第一行文字</span>
    <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;File &#39;testfile.txt&#39; successfully updated&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="fseek" tabindex="-1"><a class="header-anchor" href="#fseek" aria-hidden="true">#</a> fseek()</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">fseek</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">SEEK_END</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="seek-end-要求檔案指標移到檔案結束的地方" tabindex="-1"><a class="header-anchor" href="#seek-end-要求檔案指標移到檔案結束的地方" aria-hidden="true">#</a> SEEK_END：要求檔案指標移到檔案結束的地方</h5><p>0：接下來要從該處往回移動多少位置，0是為了將指標留在檔案結束的位置</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">fseek</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token constant">SEEK_SET</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="seek-set-要求函示將檔案指標設在前面參數指定的位置" tabindex="-1"><a class="header-anchor" href="#seek-set-要求函示將檔案指標設在前面參數指定的位置" aria-hidden="true">#</a> SEEK_SET：要求函示將檔案指標設在前面參數指定的位置</h5><p>此例會將檔案指標移到位置 18</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">fseek</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token constant">SEEK_CUR</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="seek-cur-將檔案指標移到目前的位置加上指定的位移值之後的位置" tabindex="-1"><a class="header-anchor" href="#seek-cur-將檔案指標移到目前的位置加上指定的位移值之後的位置" aria-hidden="true">#</a> SEEK_CUR：將檔案指標移到目前的位置加上指定的位移值之後的位置</h5><p>此例現在的位置是 18 ，結果會移到位置 23</p><h3 id="_8-鎖定檔案已執行多方存取" tabindex="-1"><a class="header-anchor" href="#_8-鎖定檔案已執行多方存取" aria-hidden="true">#</a> 8. 鎖定檔案已執行多方存取</h3><p>使用<code>flock()</code>，會將所有其他的檔案存取請求放入佇列中，到程式解除鎖定為止</p><blockquote><p>在修改檔案的前一刻鎖定，並且在修改後馬上解鎖</p><p>並非所有系統都支持Flock()，最好的做法是在修改之前先檢查檔案是否已被成功上鎖</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$fh</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;testfile.txt&quot;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r+&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Faild to open file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">flock</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token constant">LOCK_EX</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fseek</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token constant">SEEK_END</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$text</span></span>&quot;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Could not write to file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">fseek</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token constant">LOCK_UN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;File &#39;testfile.txt&#39; successfully updated&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>flock是所謂的建議(advisory)鎖，只會讓其他呼叫這個函式的程式無法存取檔案，如果有程式不使用flock檔案來鎖定，而是直接修改檔案的話，它會複寫鎖定，可能會對檔案造成嚴重的破壞。</p><p>flock在 NFS 與許多其他網路檔案系統中是沒有效果的</p><p>任何die()都會自動解鎖並在程式結束時關閉檔案</p></div><h3 id="_9-讀取整個檔案" tabindex="-1"><a class="header-anchor" href="#_9-讀取整個檔案" aria-hidden="true">#</a> 9. 讀取整個檔案</h3><p>使用 <code>file_get_contents()</code> 可以讀取整個檔案並且不需要使用檔案控制代碼</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
   <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&quot;</span><span class="token punctuation">;</span>
   <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;testfile.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-上傳檔案" tabindex="-1"><a class="header-anchor" href="#_10-上傳檔案" aria-hidden="true">#</a> 10. 上傳檔案</h3><p>move_uploaded_file(&#39;上傳後的臨時文件名&#39;, &#39;包含有路徑的文件名&#39;)</p><p>第一個參數：由系統自動產生。樣式通常為 <code>$_FILE[&quot;file&quot;][&quot;tmp_name&quot;]</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
   <span class="token keyword">echo</span> <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">_END</span>
    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string double-quoted-string">&quot;upload.php&quot;</span> method<span class="token operator">=</span><span class="token string double-quoted-string">&quot;post&quot;</span> enctype<span class="token operator">=</span><span class="token string double-quoted-string">&quot;multipart/form-data&quot;</span><span class="token operator">&gt;</span>
        Select File<span class="token punctuation">:</span> <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">&quot;file&quot;</span> name<span class="token operator">=</span><span class="token string double-quoted-string">&quot;filename&quot;</span> size<span class="token operator">=</span><span class="token string double-quoted-string">&quot;10&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">&quot;submit&quot;</span> value<span class="token operator">=</span><span class="token string double-quoted-string">&quot;upload&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
    <span class="token constant">_END</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;filename&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
         <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;filename&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;tmp_name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;./upload/&quot;</span> <span class="token operator">.</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Uploaded image &#39;<span class="token interpolation"><span class="token variable">$name</span></span>&#39;&lt;br&gt;&lt;img src=&#39;<span class="token interpolation"><span class="token variable">$name</span></span>&#39;&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;/body&gt;&lt;/html&gt;.&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="files陣列的內容" tabindex="-1"><a class="header-anchor" href="#files陣列的內容" aria-hidden="true">#</a> $_FILES陣列的內容</h4><p>當檔案被上傳時，$_FILES陣列會被存入五項資訊</p><table><thead><tr><th style="text-align:center;">陣列元素</th><th style="text-align:center;">內容</th></tr></thead><tbody><tr><td style="text-align:center;">$_FILES[&#39;file&#39;][&#39;name&#39;]</td><td style="text-align:center;">上傳的檔案的名稱(如：image.jpg)</td></tr><tr><td style="text-align:center;">$_FILES[&#39;file&#39;][&#39;type&#39;]</td><td style="text-align:center;">上傳的檔案的檔案類型(如：jpeg)</td></tr><tr><td style="text-align:center;">$_FILES[&#39;file&#39;][&#39;size&#39;]</td><td style="text-align:center;">檔案的大小，以byte為單位</td></tr><tr><td style="text-align:center;">$_FILES[&#39;file&#39;][&#39;tmp_name&#39;]</td><td style="text-align:center;">在伺服器存儲的暫時性的檔案的名稱</td></tr><tr><td style="text-align:center;">$_FILES[&#39;file&#39;][&#39;error&#39;]</td><td style="text-align:center;">上傳檔案時產生的錯誤碼</td></tr></tbody></table><h4 id="驗證" tabindex="-1"><a class="header-anchor" href="#驗證" aria-hidden="true">#</a> 驗證</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
   <span class="token keyword">echo</span> <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span><span class="token constant">_END</span>
    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string double-quoted-string">&quot;upload.php&quot;</span> method<span class="token operator">=</span><span class="token string double-quoted-string">&quot;post&quot;</span> enctype<span class="token operator">=</span><span class="token string double-quoted-string">&quot;multipart/form-data&quot;</span><span class="token operator">&gt;</span>
        Select File<span class="token punctuation">:</span> <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">&quot;file&quot;</span> name<span class="token operator">=</span><span class="token string double-quoted-string">&quot;filename&quot;</span> size<span class="token operator">=</span><span class="token string double-quoted-string">&quot;10&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">&quot;submit&quot;</span> value<span class="token operator">=</span><span class="token string double-quoted-string">&quot;upload&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
    <span class="token constant">_END</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;filename&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;filename&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;image/jpeg&#39;</span><span class="token punctuation">:</span> <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;jpg&#39;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;image/gif&#39;</span><span class="token punctuation">:</span> <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;gif&#39;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;image/png&#39;</span><span class="token punctuation">:</span> <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;png&#39;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;image/tiff&#39;</span><span class="token punctuation">:</span> <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;tif&#39;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$n</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;image.<span class="token interpolation"><span class="token variable">$ext</span></span>&quot;</span><span class="token punctuation">;</span>
            <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;filename&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;tmp_name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$n</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Uploaded image &#39;<span class="token interpolation"><span class="token variable">$name</span></span>&#39; as &#39;<span class="token interpolation"><span class="token variable">$n</span></span>&#39;:&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;img src=&#39;<span class="token interpolation"><span class="token variable">$n</span></span>&#39;&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">else</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&#39;<span class="token interpolation"><span class="token variable">$name</span></span>&#39; is not an accepted image file&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;/body&gt;&lt;/html&gt;.&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-系統呼叫" tabindex="-1"><a class="header-anchor" href="#_11-系統呼叫" aria-hidden="true">#</a> 11. 系統呼叫</h3><p>如果PHP沒有可執行某些動作的函式，但是運行它的作業系統有這種函式，此時可以使用 exec 系統呼叫來執行它</p><p>範例：</p><p>快速瀏覽目前目錄</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;dir&quot;</span><span class="token punctuation">;</span>

    <span class="token function">exec</span><span class="token punctuation">(</span><span class="token function">escapeshellcmd</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$output</span><span class="token punctuation">,</span> <span class="token variable">$status</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$status</span><span class="token punctuation">)</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Exec commadn failed&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$output</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token keyword">echo</span> <span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$line</span></span>\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,121),l=[i];function c(u,r){return s(),a("div",null,l)}const k=n(o,[["render",c],["__file","08.html.vue"]]);export{k as default};
