import{_ as e,p as a,q as t,a1 as s}from"./framework-96b046e1.js";const d={},i=s(`<h1 id="_05-【-sort-與投影-】" tabindex="-1"><a class="header-anchor" href="#_05-【-sort-與投影-】" aria-hidden="true">#</a> 05 【 sort()與投影 】</h1><h2 id="_1-sort" tabindex="-1"><a class="header-anchor" href="#_1-sort" aria-hidden="true">#</a> 1. sort()</h2><blockquote><p>查詢文件時，默認是按照<code>_id</code>的值進行升序排列</p><p>1：升序 -1：降序</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.stu.find({}).sort({number:1, name:-1})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>limit()、skip()、sort()可以以任意的順序進行調用</p></div><h2 id="_2-投影" tabindex="-1"><a class="header-anchor" href="#_2-投影" aria-hidden="true">#</a> 2. 投影</h2><blockquote><p>在查詢時，可以在第二個參數來設定查詢結果的投影</p><p>1：顯示結果 0：不顯示結果</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.stu.find({}, {name:1, _id:0, age:1})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),r=[i];function n(c,o){return a(),t("div",null,r)}const u=e(d,[["render",n],["__file","05.html.vue"]]);export{u as default};
