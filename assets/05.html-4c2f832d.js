const e=JSON.parse('{"key":"v-0efe8d79","path":"/notes/spring/05.html","title":"05 【 基於xml的Spring應用】","lang":"zh-TW","frontmatter":{},"headers":[{"level":2,"title":"1. Bean基礎配置","slug":"_1-bean基礎配置","link":"#_1-bean基礎配置","children":[]},{"level":2,"title":"2. Bean的別名設置","slug":"_2-bean的別名設置","link":"#_2-bean的別名設置","children":[]},{"level":2,"title":"3. Bean的範圍設置(scope)","slug":"_3-bean的範圍設置-scope","link":"#_3-bean的範圍設置-scope","children":[]},{"level":2,"title":"4. Bean的延遲加載","slug":"_4-bean的延遲加載","link":"#_4-bean的延遲加載","children":[]},{"level":2,"title":"5. Bean的 初始化 與 銷毀","slug":"_5-bean的-初始化-與-銷毀","link":"#_5-bean的-初始化-與-銷毀","children":[]},{"level":2,"title":"6. Bean實體化的配置","slug":"_6-bean實體化的配置","link":"#_6-bean實體化的配置","children":[{"level":3,"title":"1. 靜態工廠方法實體化Bean","slug":"_1-靜態工廠方法實體化bean","link":"#_1-靜態工廠方法實體化bean","children":[]},{"level":3,"title":"2. 實體工廠方法實體化Bean","slug":"_2-實體工廠方法實體化bean","link":"#_2-實體工廠方法實體化bean","children":[]},{"level":3,"title":"3. 如果靜態工廠方法跟非靜態工廠方法帶有參數","slug":"_3-如果靜態工廠方法跟非靜態工廠方法帶有參數","link":"#_3-如果靜態工廠方法跟非靜態工廠方法帶有參數","children":[]},{"level":3,"title":"4. 實現FactoryBean規範延遲實體化Bean","slug":"_4-實現factorybean規範延遲實體化bean","link":"#_4-實現factorybean規範延遲實體化bean","children":[]}]},{"level":2,"title":"7. Bean的依賴注入配置方式","slug":"_7-bean的依賴注入配置方式","link":"#_7-bean的依賴注入配置方式","children":[]},{"level":2,"title":"8. 依賴注入：自動裝配方式","slug":"_8-依賴注入-自動裝配方式","link":"#_8-依賴注入-自動裝配方式","children":[]},{"level":2,"title":"9. Spring的其他配置標籤","slug":"_9-spring的其他配置標籤","link":"#_9-spring的其他配置標籤","children":[{"level":3,"title":"1. <beans>標籤","slug":"_1-beans-標籤","link":"#_1-beans-標籤","children":[]},{"level":3,"title":"2. <import>標籤","slug":"_2-import-標籤","link":"#_2-import-標籤","children":[]},{"level":3,"title":"3. <alias>標籤","slug":"_3-alias-標籤","link":"#_3-alias-標籤","children":[]},{"level":3,"title":"4. 自定義標籤","slug":"_4-自定義標籤","link":"#_4-自定義標籤","children":[]}]},{"level":2,"title":"10. Spring的getBean的API","slug":"_10-spring的getbean的api","link":"#_10-spring的getbean的api","children":[]},{"level":2,"title":"11. 配置非自定義的Bean","slug":"_11-配置非自定義的bean","link":"#_11-配置非自定義的bean","children":[{"level":3,"title":"1. 範例：無參構造","slug":"_1-範例-無參構造","link":"#_1-範例-無參構造","children":[]},{"level":3,"title":"2. 範例：靜態工廠","slug":"_2-範例-靜態工廠","link":"#_2-範例-靜態工廠","children":[]},{"level":3,"title":"3. 範例：實體工廠","slug":"_3-範例-實體工廠","link":"#_3-範例-實體工廠","children":[]},{"level":3,"title":"4. 範例：綜合","slug":"_4-範例-綜合","link":"#_4-範例-綜合","children":[]}]},{"level":2,"title":"12. Bean實體化的基本流程","slug":"_12-bean實體化的基本流程","link":"#_12-bean實體化的基本流程","children":[]},{"level":2,"title":"13. Bean後處理器","slug":"_13-bean後處理器","link":"#_13-bean後處理器","children":[{"level":3,"title":"1. Bean工廠後處理器 BeanFactoryPostProcessor","slug":"_1-bean工廠後處理器-beanfactorypostprocessor","link":"#_1-bean工廠後處理器-beanfactorypostprocessor","children":[]},{"level":3,"title":"2.BeanDefinitionRegistryPostProcessor","slug":"_2-beandefinitionregistrypostprocessor","link":"#_2-beandefinitionregistrypostprocessor","children":[]},{"level":3,"title":"3. Bean後處理器 BeanPostProcessor","slug":"_3-bean後處理器-beanpostprocessor","link":"#_3-bean後處理器-beanpostprocessor","children":[]},{"level":3,"title":"4. 範例","slug":"_4-範例","link":"#_4-範例","children":[]}]},{"level":2,"title":"14. Spring的生命週期","slug":"_14-spring的生命週期","link":"#_14-spring的生命週期","children":[{"level":3,"title":"1. 生命週期的執行步驟","slug":"_1-生命週期的執行步驟","link":"#_1-生命週期的執行步驟","children":[]},{"level":3,"title":"2. SpringBean的初始化過程","slug":"_2-springbean的初始化過程","link":"#_2-springbean的初始化過程","children":[]},{"level":3,"title":"3. Aware接口","slug":"_3-aware接口","link":"#_3-aware接口","children":[]}]},{"level":2,"title":"15. IoC容器實體化Bean整體流程","slug":"_15-ioc容器實體化bean整體流程","link":"#_15-ioc容器實體化bean整體流程","children":[]}],"git":{},"filePathRelative":"notes/spring/05.md"}');export{e as data};
