import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const e={},o=t(`<h1 id="_05-【-網頁資料傳遞-】" tabindex="-1"><a class="header-anchor" href="#_05-【-網頁資料傳遞-】" aria-hidden="true">#</a> 05 【 網頁資料傳遞 】</h1><h2 id="_1-觀念說明" tabindex="-1"><a class="header-anchor" href="#_1-觀念說明" aria-hidden="true">#</a> 1. 觀念說明</h2><p>使用者在瀏覽器輸入網址後，瀏覽器會透過 <code>HTTP GET</code> 或 <code>HTTP POST</code> 的傳遞方式來尋找伺服器位址，若有找到即可以進入到對應的網頁傳遞資料</p><p>HTTP傳遞的方式是無狀態(stateless)的，也就是傳遞的資料不會被記錄下來，下次瀏覽網頁時資料就會消失</p><p>以登入功能為例，若要實現長時間登入，關閉瀏覽器後不用重新登入，需要透過狀態管理方式 <code>Cookie</code> 與 <code>Session</code> 保存資料</p><h2 id="_2-php網頁的狀態管理" tabindex="-1"><a class="header-anchor" href="#_2-php網頁的狀態管理" aria-hidden="true">#</a> 2. PHP網頁的狀態管理</h2><p>網頁中需要保存的資料通常儲存在客戶端或伺服器端。</p><h3 id="_1-客戶端的狀態管理" tabindex="-1"><a class="header-anchor" href="#_1-客戶端的狀態管理" aria-hidden="true">#</a> 1. 客戶端的狀態管理</h3><p>將資料儲存在客戶端。當使用者執行的PHP程式需要資料時，不必透過伺服器端，在客戶端即可存取資料</p><table><thead><tr><th style="text-align:center;">方法</th><th style="text-align:center;">說明</th></tr></thead><tbody><tr><td style="text-align:center;">表單欄位</td><td style="text-align:center;">使用HTML表單的標籤來傳遞資料到其他網頁</td></tr><tr><td style="text-align:center;">URL 參數</td><td style="text-align:center;">使用URL網址的參數來傳遞資料到其他網頁</td></tr><tr><td style="text-align:center;">Cookie</td><td style="text-align:center;">將資料儲存在一份檔案並保留在使用者的電腦內</td></tr></tbody></table><h3 id="_2-伺服器端的狀態管理" tabindex="-1"><a class="header-anchor" href="#_2-伺服器端的狀態管理" aria-hidden="true">#</a> 2. 伺服器端的狀態管理</h3><p>將資料儲存在伺服器端，PHP程式需要透過伺服器才能取得資料但是安全性較高</p><table><thead><tr><th style="text-align:center;">方法</th><th style="text-align:center;">說明</th></tr></thead><tbody><tr><td style="text-align:center;">Session變數</td><td style="text-align:center;">使用Session變數來儲存使用的資料</td></tr><tr><td style="text-align:center;">文字檔案</td><td style="text-align:center;">在伺服器端使用文字檔案來儲存使用者的資料</td></tr><tr><td style="text-align:center;">資料庫</td><td style="text-align:center;">使用資料庫來儲存使用者的資料</td></tr></tbody></table><h3 id="_3-各種狀態管理方法的適用場合" tabindex="-1"><a class="header-anchor" href="#_3-各種狀態管理方法的適用場合" aria-hidden="true">#</a> 3. 各種狀態管理方法的適用場合</h3><table><thead><tr><th style="text-align:center;">方法</th><th style="text-align:center;">適用場合</th></tr></thead><tbody><tr><td style="text-align:center;">表單欄位</td><td style="text-align:center;">蒐集網站使用者輸入的資訊，例如使用者填寫註冊會員表單的資料</td></tr><tr><td style="text-align:center;">URL 參數</td><td style="text-align:center;">傳遞沒有安全性考量的資料，例如討論區的頁數</td></tr><tr><td style="text-align:center;">Cookie</td><td style="text-align:center;">安全性要求不高以及少量的資料，例如購物車內的商品資訊。因為是儲存在客戶端，所以有洩露安全性問題；但是可以減少伺服器端的負擔</td></tr><tr><td style="text-align:center;">Session</td><td style="text-align:center;">有安全性考量的資料，例如帳號、密碼。因為是儲存在伺服器端，安全性較佳；但伺服器的負擔較重</td></tr><tr><td style="text-align:center;">文字檔案</td><td style="text-align:center;">大量的文字資料</td></tr><tr><td style="text-align:center;">資料庫</td><td style="text-align:center;">大量的且需要保密的資料，例如會員資料。資料庫是屬於伺服器端的儲存，當資料有安全性考量以及需要永久性保存時，資料庫是最適合的儲存空間</td></tr></tbody></table><h2 id="_3-表單和url參數的傳遞與接收" tabindex="-1"><a class="header-anchor" href="#_3-表單和url參數的傳遞與接收" aria-hidden="true">#</a> 3. 表單和URL參數的傳遞與接收</h2><p><code>表單</code> 和 <code>URL參數</code> 是PHP網頁用來傳遞資料最常見的方式</p><h3 id="_1-表單的傳遞與接收" tabindex="-1"><a class="header-anchor" href="#_1-表單的傳遞與接收" aria-hidden="true">#</a> 1. 表單的傳遞與接收</h3><h4 id="_1-傳遞" tabindex="-1"><a class="header-anchor" href="#_1-傳遞" aria-hidden="true">#</a> 1. 傳遞</h4><p>・ 用 <code>form標籤</code> 包括傳遞的資料</p><p>・ <code>action</code>屬性表示目標網頁</p><p>・ <code>mehtod</code>屬性表示傳遞的方式，預設為<code>GET</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string double-quoted-string">&quot;postform.php&quot;</span> method<span class="token operator">=</span><span class="token string double-quoted-string">&quot;post&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">&quot;text&quot;</span> name<span class="token operator">=</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">&quot;submit&quot;</span> value<span class="token operator">=</span><span class="token string double-quoted-string">&quot;送出&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="get-與-post-的區別" tabindex="-1"><a class="header-anchor" href="#get-與-post-的區別" aria-hidden="true">#</a> GET 與 POST 的區別</h4><p>POST： 使用HTTP通訊協定的贆投來傳遞表單資料，允許傳輸大量的資料</p><p>GET： 使用URL網址的參數來傳遞資料，長度限制為連同URL共255字元</p><h4 id="_2-接收" tabindex="-1"><a class="header-anchor" href="#_2-接收" aria-hidden="true">#</a> 2. 接收</h4><blockquote><p>postform.php</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Hello, &quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">傳遞方式</th><th style="text-align:center;">接收方式</th></tr></thead><tbody><tr><td style="text-align:center;">POST</td><td style="text-align:center;">使用 <code>$_POST[&quot;欄位名稱&quot;]</code> 指定接收表單內的欄位值</td></tr><tr><td style="text-align:center;">GET</td><td style="text-align:center;">使用 <code>$_GET[&quot;欄位名稱&quot;]</code> 指定接收表單內的欄位值</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">提示</p><p>必須為大寫才可正確取得資料</p><p>使用 GET 傳遞資料會讓表單內的欄位值暴露在網址列中，若表單內容有安全性考量，需要避免使用GET</p></div><h3 id="_2-url參數的傳遞與接收" tabindex="-1"><a class="header-anchor" href="#_2-url參數的傳遞與接收" aria-hidden="true">#</a> 2. URL參數的傳遞與接收</h3><p>資料以字串的方式傳遞，資料必須附加在網址的後面。</p><p>網址與資料之間必須以 <code>?</code> 做為區隔：參數與參數之間必須以 <code>&amp;</code> 連接</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url.php?username=name&amp;sex=male<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>傳送<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用GET方式接收URL參數：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$sex</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;sex&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$name</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token variable">$sex</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>使用 GET 傳遞資料會讓表單內的欄位值暴露在網址列中，若表單內容有安全性考量，需要避免使用GET</p></div><h2 id="_4-cookie" tabindex="-1"><a class="header-anchor" href="#_4-cookie" aria-hidden="true">#</a> 4. Cookie</h2><p>Cookie是一種小型的文字檔案，用來記錄使用者的登入資訊和使用者的操作資訊，並且儲存於用戶端的電腦中。</p><h3 id="_1-好處與壞處" tabindex="-1"><a class="header-anchor" href="#_1-好處與壞處" aria-hidden="true">#</a> 1. 好處與壞處</h3><table><thead><tr><th style="text-align:center;">好處</th><th style="text-align:center;">壞處</th></tr></thead><tbody><tr><td style="text-align:center;">儲存於用戶端的磁碟或記憶體，不會占用伺服器的資源</td><td style="text-align:center;">因為是儲存在用戶端，可能會被竊取，有安全性的問題</td></tr><tr><td style="text-align:center;">可以長時間儲存於用戶端的電腦，在生命週期到達前，可以不斷取得資料</td><td style="text-align:center;">瀏覽器只能對同一個伺服器儲存20個Cookie，而每個Cookie只有4k bytes的容量，因此不適合儲存大量資料，且若瀏覽器不支援Cookie，可能會造成Cookie無法使用</td></tr></tbody></table><h3 id="_2-存取-cookie-資料" tabindex="-1"><a class="header-anchor" href="#_2-存取-cookie-資料" aria-hidden="true">#</a> 2. 存取 Cookie 資料</h3><h4 id="_1-儲存-cookie-資料" tabindex="-1"><a class="header-anchor" href="#_1-儲存-cookie-資料" aria-hidden="true">#</a> 1. 儲存 Cookie 資料</h4><p>使用 <code>setcookie()</code> 將資料寫入Cookie中</p><p>若要設定Cookie的有效時間、儲存路徑、安全性時，則需要帶入參數；若沒有指定有效時間，在關閉瀏覽器後，Cookie就會消失</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;名稱&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;內容值&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 設定有效時間、儲存路徑、安全性</span>
<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;名稱&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;內容值&quot;</span><span class="token punctuation">,</span> 有效時間<span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;儲存路徑&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;網域&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;安全性&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">參數</th><th style="text-align:center;">說明</th></tr></thead><tbody><tr><td style="text-align:center;">名稱</td><td style="text-align:center;">Cookie 的名稱</td></tr><tr><td style="text-align:center;">內容值</td><td style="text-align:center;">Cookie 儲存的內容</td></tr><tr><td style="text-align:center;">有效時間</td><td style="text-align:center;">格式為時間戳，time()為目前的時間。例：(1)一天後失效<code>time()+3600*24</code>，(2)一年後失效<code>time()+3600*24*365</code></td></tr><tr><td style="text-align:center;">儲存路徑</td><td style="text-align:center;">從「php.ini(網頁伺服器設定檔)」內可以看到&quot;session.cookie_path&quot;顯示的預設路徑。預設路徑通常為<code>/</code>，表示對於伺服器上所有檔案與目錄都是有效的儲存路徑。</td></tr><tr><td style="text-align:center;">網域</td><td style="text-align:center;">若指定「www.php.com.tw」為有效網域，則Cookie只能存取該網址。如果不指定網域或主機，則預設的有效網域是產生Cookie的主機名稱</td></tr><tr><td style="text-align:center;">安全性</td><td style="text-align:center;">預設為<code>0</code>。<code>0</code>：允許使用HTTP傳送Cookie。<code>1</code>：只有使用HTTPS才傳送Cookie。</td></tr></tbody></table><h5 id="ob-start" tabindex="-1"><a class="header-anchor" href="#ob-start" aria-hidden="true">#</a> ob_start()</h5><p>呼叫 <code>setcookie()</code> 之前不可以對瀏覽器有任何輸出，否則會發生錯誤</p><p>如果必須在呼叫 <code>setcookie()</code> 之前呼叫 <code>echo()</code> 時，要用 <code>ob_start()</code> 來解決錯誤發生\`</p><p><code>ob_start()</code> 的用意是打開緩衝區。當打開了緩衝區，<code>echo()</code> 內的字串不會輸出到瀏覽器，而是保存在內部緩衝區，直到使用 <code>flush()</code> 或 <code>ob_end_flush()</code>，才會將串輸出到瀏覽器</p><h4 id="_2-讀取-cookie-資料" tabindex="-1"><a class="header-anchor" href="#_2-讀取-cookie-資料" aria-hidden="true">#</a> 2. 讀取 Cookie 資料</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?</span>
    <span class="token keyword">echo</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;名稱&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
php<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>範例：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;設定cookie的內容值&lt;BR&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;cookie&quot;</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">ob_end_flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cookie.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>存取Cookie<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>cookie.php</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">echo</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-session" tabindex="-1"><a class="header-anchor" href="#_5-session" aria-hidden="true">#</a> 5. Session</h2><p>Session的意思是「使用者進入網站到使用者離開網站的整個過程」。在PHP中，使用Session可以在伺服器端保存使用者的狀態資料。</p><p>當使用者用瀏覽器連線到網站時，網站伺服器會指定一個SessionID給這次的連線。在預設的狀態下，SessionID會用Cookie的方式儲存在用戶端。所以痛一個使用者瀏覽各個網頁時都同一個SessionID。換句話說，SessionID就像各個網頁的父節點，美個網頁都可以繼承SessionID。當瀏覽器關閉，Cookie隨之刪除，因此同一台電腦的後一位使用者也就無法得到上一個使用者的SessionID，因此Session適用於有安全性考量的資料。</p><h3 id="_1-啟動與存取session-變數" tabindex="-1"><a class="header-anchor" href="#_1-啟動與存取session-變數" aria-hidden="true">#</a> 1. 啟動與存取Session 變數</h3><h4 id="_1-啟動session-與-設定session變數" tabindex="-1"><a class="header-anchor" href="#_1-啟動session-與-設定session變數" aria-hidden="true">#</a> 1. 啟動Session 與 設定Session變數</h4><p>必須先呼叫 <code>session_start()</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 啟動Session</span>
    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;名稱&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;設定的值&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>範例：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getsession.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>存取Session<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>getsession.php</p></blockquote><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-session的有效時間" tabindex="-1"><a class="header-anchor" href="#_2-session的有效時間" aria-hidden="true">#</a> 2. Session的有效時間</h3><p>在<code>php.ini</code>中，Session的預設有效時間為1440(24 * 60秒)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>session.gc_maxlifetime = 1440
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-刪除session" tabindex="-1"><a class="header-anchor" href="#_3-刪除session" aria-hidden="true">#</a> 3. 刪除Session</h3><p>使用者關閉網頁後，Session就等於失效了。</p><p>除了關閉網頁外，還有兩種方式可以刪除Session</p><h4 id="_1-刪除指定的session" tabindex="-1"><a class="header-anchor" href="#_1-刪除指定的session" aria-hidden="true">#</a> 1. 刪除指定的Session</h4><p><code>unset(刪除的Session)</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>    <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;pass&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;$_SESSION[&quot;username&quot;]不存在&lt;BR&gt;&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;BR&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token operator">?</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-刪除目前所有的session" tabindex="-1"><a class="header-anchor" href="#_2-刪除目前所有的session" aria-hidden="true">#</a> 2. 刪除目前所有的Session</h4><p><code>session_unset()</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;name&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;pass&quot;</span><span class="token punctuation">;</span>

    <span class="token function">session_unset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;$_SESSION[&quot;username&quot;]不存在&lt;BR&gt;&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;$_SESSION[&quot;password&quot;]不存在&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;BR&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">echo</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,81),p=[o];function i(l,c){return s(),a("div",null,p)}const d=n(e,[["render",i],["__file","05.html.vue"]]);export{d as default};
