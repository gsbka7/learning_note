import{_ as e,M as p,p as o,q as i,R as n,t as s,N as l,a1 as a}from"./framework-96b046e1.js";const c={},u=a(`<h1 id="_03-【-陣列-】" tabindex="-1"><a class="header-anchor" href="#_03-【-陣列-】" aria-hidden="true">#</a> 03 【 陣列 】</h1><h2 id="_1-基本操作" tabindex="-1"><a class="header-anchor" href="#_1-基本操作" aria-hidden="true">#</a> 1. 基本操作</h2><h3 id="_1-數值索引陣列" tabindex="-1"><a class="header-anchor" href="#_1-數值索引陣列" aria-hidden="true">#</a> 1. 數值索引陣列</h3><p>將多個項目加入陣列</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item1&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item2&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item3&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item4&quot;</span><span class="token punctuation">;</span>

    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$paper</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>指定明確的位置，將項目加入陣列</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item1&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item2&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item3&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item4&quot;</span><span class="token punctuation">;</span>

    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$paper</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>將項目加入陣列，並將它們取出</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item1&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item2&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item3&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item4&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$j</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token operator">++</span><span class="token variable">$j</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$j</span></span>:<span class="token interpolation"><span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token variable">$j</span><span class="token punctuation">]</span></span>&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-關聯陣列" tabindex="-1"><a class="header-anchor" href="#_2-關聯陣列" aria-hidden="true">#</a> 2. 關聯陣列</h3><p>使用名稱來參考陣列中的項目</p><p>範例：在關聯陣列中加入與取出項目</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;i1&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item1&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;i2&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item2&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;i3&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item3&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;i4&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;item4&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">echo</span> <span class="token variable">$paper</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;i1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// item1</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-使用-array-關鍵字賦值" tabindex="-1"><a class="header-anchor" href="#_3-使用-array-關鍵字賦值" aria-hidden="true">#</a> 3. 使用 array 關鍵字賦值</h3><p>使用 array 關鍵字將項目加入陣列</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$p1</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;item1&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;item2&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;item3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;p1 element: &quot;</span> <span class="token operator">.</span> <span class="token variable">$p1</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span> <span class="token comment">// p1 element: item3</span>

    <span class="token variable">$p2</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
                <span class="token string double-quoted-string">&quot;i1&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;item1&quot;</span><span class="token punctuation">,</span>
                <span class="token string double-quoted-string">&quot;i2&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;item2&quot;</span><span class="token punctuation">,</span>
                <span class="token string double-quoted-string">&quot;i3&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;item3&quot;</span><span class="token punctuation">,</span>
                <span class="token string double-quoted-string">&quot;i4&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;item4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;p2 element: &quot;</span> <span class="token operator">.</span> <span class="token variable">$p2</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;i1&#39;</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span> <span class="token comment">// p2 element: item1</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-foreach-as-迴圈" tabindex="-1"><a class="header-anchor" href="#_4-foreach-as-迴圈" aria-hidden="true">#</a> 4. foreach...as 迴圈</h3><h4 id="_1-使用foreach-as-遍歷數值陣列" tabindex="-1"><a class="header-anchor" href="#_1-使用foreach-as-遍歷數值陣列" aria-hidden="true">#</a> 1. 使用foreach...as 遍歷數值陣列</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$paper</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;item1&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;item2&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;item3&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;item4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$paper</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$j</span></span>: <span class="token interpolation"><span class="token variable">$item</span></span>&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token operator">++</span><span class="token variable">$j</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-用-foreach-as-遍歷關聯陣列" tabindex="-1"><a class="header-anchor" href="#_2-用-foreach-as-遍歷關聯陣列" aria-hidden="true">#</a> 2. 用 foreach...as 遍歷關聯陣列</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$paper</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;i1&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;item1&#39;</span><span class="token punctuation">,</span>
                   <span class="token string single-quoted-string">&#39;i2&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;item2&#39;</span><span class="token punctuation">,</span>
                   <span class="token string single-quoted-string">&#39;i3&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;item3&#39;</span><span class="token punctuation">,</span>
                   <span class="token string single-quoted-string">&#39;i4&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;item4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$paper</span> <span class="token keyword">as</span> <span class="token variable">$item</span> <span class="token operator">=&gt;</span> <span class="token variable">$description</span><span class="token punctuation">)</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$item</span></span>: <span class="token interpolation"><span class="token variable">$description</span></span>&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-使用-each-與-list-來遍歷關聯陣列" tabindex="-1"><a class="header-anchor" href="#_3-使用-each-與-list-來遍歷關聯陣列" aria-hidden="true">#</a> 3. 使用 each 與 list 來遍歷關聯陣列</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$paper</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;i1&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;item1&#39;</span><span class="token punctuation">,</span>
                   <span class="token string single-quoted-string">&#39;i2&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;item2&#39;</span><span class="token punctuation">,</span>
                   <span class="token string single-quoted-string">&#39;i3&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;item3&#39;</span><span class="token punctuation">,</span>
                   <span class="token string single-quoted-string">&#39;i4&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;item4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">,</span> <span class="token variable">$description</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">each</span><span class="token punctuation">(</span><span class="token variable">$paper</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$item</span></span>: <span class="token interpolation"><span class="token variable">$description</span></span>&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>while迴圈會持續重複執行，直到each函式回傳FALSE值為止。</p><p>list函式接收陣列參數(在這個範例中，就是each函式回傳的鍵值)，接著將陣列的值指派給括號裡面列舉的變數</p><h3 id="_4-使用list函式" tabindex="-1"><a class="header-anchor" href="#_4-使用list函式" aria-hidden="true">#</a> 4. 使用list函式</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Alice&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Bob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;a=<span class="token interpolation"><span class="token variable">$a</span></span> b=<span class="token interpolation"><span class="token variable">$b</span></span>&quot;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用Alice與Bob建立一個陣列，然後傳給list函式，函式會將這兩個字串當成值派給變數$a與$b</p><h2 id="_2-多維陣列" tabindex="-1"><a class="header-anchor" href="#_2-多維陣列" aria-hidden="true">#</a> 2. 多維陣列</h2><p>簡單的PHP語法可以建立一維以上的陣列</p><h3 id="_1-建立多維陣列" tabindex="-1"><a class="header-anchor" href="#_1-建立多維陣列" aria-hidden="true">#</a> 1. 建立多維陣列</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$products</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
        <span class="token string single-quoted-string">&#39;paper&#39;</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
            <span class="token string single-quoted-string">&#39;p1&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;paper1&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;p2&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;paper2&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;p3&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;paper3&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;p4&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;paper4&#39;</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>

        <span class="token string single-quoted-string">&#39;pens&#39;</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
            <span class="token string single-quoted-string">&#39;pe1&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;pen1&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;pe2&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;pen2&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;pe3&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;pen3&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;pe4&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;pen4&#39;</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>

        <span class="token string single-quoted-string">&#39;misc&#39;</span> <span class="token operator">=&gt;</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
            <span class="token string single-quoted-string">&#39;m1&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;misc1&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;m2&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;misc2&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;m3&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;misc3&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;m4&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;misc4&#39;</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$products</span> <span class="token keyword">as</span> <span class="token variable">$section</span> <span class="token operator">=&gt;</span> <span class="token variable">$item</span><span class="token punctuation">)</span>
        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$item</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$section</span></span>: \\t<span class="token interpolation"><span class="token variable">$key</span></span>\\t(<span class="token interpolation"><span class="token variable">$value</span></span>)&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;/pre&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>paper: p1 (paper1)
paper: p2 (paper2)
paper: p3 (paper3)
paper: p4 (paper4)
pens: pe1 (pen1)
pens: pe2 (pen2)
pens: pe3 (pen3)
pens: pe4 (pen4)
misc: m1 (misc1)
misc: m2 (misc2)
misc: m3 (misc3)
misc: m4 (misc4)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以使用方括號來直接存取陣列中的特定元素</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token variable">$products</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;misc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;m1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// misc1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-建立多維數值陣列" tabindex="-1"><a class="header-anchor" href="#_2-建立多維數值陣列" aria-hidden="true">#</a> 2. 建立多維數值陣列</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$chessboard</span>  <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>
        <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;n&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;q&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;k&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;n&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;r&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;P&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;P&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;P&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;P&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;P&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;P&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;P&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;P&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;R&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;N&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Q&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;K&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;N&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;R&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&quot;</span><span class="token punctuation">;</span>
    
    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$chessboard</span> <span class="token keyword">as</span> <span class="token variable">$row</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token keyword">as</span> <span class="token variable">$piece</span><span class="token punctuation">)</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$piece</span></span>&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;/pre&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>這段程式使用兩個嵌套的foreach...as迴圈便利陣列並顯示內容</p><p>外部迴圈會把每一列放入變數$row，這個變數本身也是一個陣列，因為$chessboard的每一列都是一個次級陣列</p><p>接下來內部迴圈會處理每一列裡面的方塊，輸出他儲存的字元($piece)，並在後面加上一個空格</p><p>可以使用方括號來直接存取陣列中的特定元素</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token variable">$chessboard</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Q</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-使用陣列函式" tabindex="-1"><a class="header-anchor" href="#_3-使用陣列函式" aria-hidden="true">#</a> 3. 使用陣列函式</h2><h3 id="_1-is-array" tabindex="-1"><a class="header-anchor" href="#_1-is-array" aria-hidden="true">#</a> 1. is_array</h3><p>陣列與變數共同使用相同的命名空間。不能同時使用$fred的變數與$fred的陣列。如果想要確定某個變數是不是陣列，可以使用 <code>is_array</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$fred</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string double-quoted-string">&quot;Is an array&quot;</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;Is not an array&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-count" tabindex="-1"><a class="header-anchor" href="#_2-count" aria-hidden="true">#</a> 2. count</h3><p>使用 <code>count</code> 得知陣列最頂層所有元素的數量</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$fred</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果想知道多維陣列裡面總共有多少元素</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$fred</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-sort" tabindex="-1"><a class="header-anchor" href="#_3-sort" aria-hidden="true">#</a> 3. sort</h3><p>排序功能</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">sort</span><span class="token punctuation">(</span><span class="token variable">$fred</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sort會直接操作陣列，而不是回傳一個排序過的新陣列。如果排序成功，會回傳 TRUE，失敗則為FALSE。</p><h4 id="以數字和字串來排序" tabindex="-1"><a class="header-anchor" href="#以數字和字串來排序" aria-hidden="true">#</a> 以數字和字串來排序</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">sort</span><span class="token punctuation">(</span><span class="token variable">$fred</span><span class="token punctuation">,</span> <span class="token constant">SORT_NUMBERIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">sort</span><span class="token punctuation">(</span><span class="token variable">$fred</span><span class="token punctuation">,</span> <span class="token constant">SORT_STRING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用-rsort-反序排列陣列" tabindex="-1"><a class="header-anchor" href="#使用-rsort-反序排列陣列" aria-hidden="true">#</a> 使用 <code>rsort</code> 反序排列陣列</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">rsort</span><span class="token punctuation">(</span><span class="token variable">$fred</span><span class="token punctuation">,</span> <span class="token constant">SORT_NUMBERIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">rsort</span><span class="token punctuation">(</span><span class="token variable">$fred</span><span class="token punctuation">,</span> <span class="token constant">SORT_STRING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-suhffle" tabindex="-1"><a class="header-anchor" href="#_4-suhffle" aria-hidden="true">#</a> 4. suhffle</h3><p>隨機排列陣列元素</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功時回傳 TRUE，失敗回傳FALSE</p><h3 id="_5-explode" tabindex="-1"><a class="header-anchor" href="#_5-explode" aria-hidden="true">#</a> 5. explode</h3><p>如果字串裡面的每個元素都用特定的字元(或字元串列)分開，可以將每一個項目放入陣列</p><h4 id="使用空格將字串拆成陣列" tabindex="-1"><a class="header-anchor" href="#使用空格將字串拆成陣列" aria-hidden="true">#</a> 使用空格將字串拆成陣列</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;This is a sentence with seven words&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$temp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Array ( [0] =&gt; This [1] =&gt; is [2] =&gt; a [3] =&gt; sentence [4] =&gt; with [5] =&gt; seven [6] =&gt; words )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="使用-將字串拆成陣列" tabindex="-1"><a class="header-anchor" href="#使用-將字串拆成陣列" aria-hidden="true">#</a> 使用 *** 將字串拆成陣列</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;***&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;A***sentence***with***astersks&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$temp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Array ( [0] =&gt; A [1] =&gt; sentence [2] =&gt; with [3] =&gt; astersks )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-extract" tabindex="-1"><a class="header-anchor" href="#_6-extract" aria-hidden="true">#</a> 6. extract</h3><p>將表單傳來的資料轉換成變數</p><p>如果有多個變數，可以使用extract取得所有資料</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="範例" tabindex="-1"><a class="header-anchor" href="#範例" aria-hidden="true">#</a> 範例</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>get<span class="token punctuation">&quot;</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>送出<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token comment">// 第一種方法：取得表單內容</span>
	<span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token variable">$pw</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// 第二種方法：存成全域陣列</span>
	<span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;admin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;12345678&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;歡迎&quot;</span> <span class="token operator">.</span> <span class="token variable">$username</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;密碼錯誤&quot;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
		<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;帳號錯誤&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="取出的變數與既有的變數發生衝突" tabindex="-1"><a class="header-anchor" href="#取出的變數與既有的變數發生衝突" aria-hidden="true">#</a> 取出的變數與既有的變數發生衝突</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
		    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>送出<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token variable">$num</span><span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;extract前的num為:&quot;</span> <span class="token operator">.</span> <span class="token variable">$num</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
	<span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;extract後的num為:&quot;</span> <span class="token operator">.</span> <span class="token variable">$num</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>為了避免這種情形，可以使用這個函式提供的其他參數：</p><p>・ EXTR_SKIP：忽略已存在的變數</p><p>・ EXTR_PREFIX_SAME：如果有已存在的變數，則在新的變數加上前缀字</p><p>・ EXTR_PREFIX_ALL：所有新加入變數都有前缀字</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">,</span> <span class="token constant">EXTR_PREFIX_ALL</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;fromget&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在所有的新變數名稱前面加上指定的自首與一個底線，因此$num會變成$fromget_num。</p>`,87),r={href:"https://ithelp.ithome.com.tw/articles/10237388",target:"_blank",rel:"noopener noreferrer"},d=a(`<h3 id="_7-compact" tabindex="-1"><a class="header-anchor" href="#_7-compact" aria-hidden="true">#</a> 7. compact</h3><p>將變數與值變成陣列(extract的反向操作)</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$fname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Doctor&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$sname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Who&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$planet</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Gallifrey&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$system</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Gridlock&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$constellaction</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Kasterborous&quot;</span><span class="token punctuation">;</span>

    <span class="token variable">$contact</span> <span class="token operator">=</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;fname&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;sname&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;planet&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;system&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;constellaction&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$contact</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Array ( [fname] =&gt; Doctor [sname] =&gt; Who [planet] =&gt; Gallifrey [system] =&gt; Gridlock [constellaction] =&gt; Kasterborous )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用時必須將變數名稱放在單引號裡面，而不是在前面加上$符號，因為compact接收的是一串變數名稱，而不是變數的值</p><h4 id="除錯" tabindex="-1"><a class="header-anchor" href="#除錯" aria-hidden="true">#</a> 除錯</h4><p>compact也可以用來除錯，當想要快速檢查許多變數與它們的值時</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">;</span>
    <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Hello&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$address</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;1 Old Street&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token number">61</span><span class="token punctuation">;</span>

    <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;j temp address age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用explode函式將字串的所有單字放入陣列，接著將陣列傳給compact函式，再由這個函式將陣列回傳給print_r已顯示內容</p><h3 id="_8-reset、end、current、next、prev、each" tabindex="-1"><a class="header-anchor" href="#_8-reset、end、current、next、prev、each" aria-hidden="true">#</a> 8. reset、end、current、next、prev、each</h3><p>reset：將陣列的內部指針回退到「第一個陣列元素」，並返回第一個陣列元素的值；如果陣列為空，則返回False</p><p>current() - 返回陣列中的目前元素的值</p><p>end：將陣列的內部指針移動到「最後一個陣列元素」，並返回最後一個陣列元素的值；如果陣列為空，則返回False</p><p>next() - 將內部指針指向數陣列中的下一個元素，並返回陣列元素的值</p><p>prev() - 將內部指針指向數陣列中的上一個元素，並返回陣列元素的值</p><p>each() - 返回目前元素的鍵名和鍵值，並將內部指針向前移動</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
    <span class="token variable">$input</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foot&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;bike&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;car&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;plane&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$mode</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">print</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$mode</span></span> &lt;br /&gt;&quot;</span><span class="token punctuation">;</span>

    <span class="token variable">$mode</span> <span class="token operator">=</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">print</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$mode</span></span> &lt;br /&gt;&quot;</span><span class="token punctuation">;</span>

    <span class="token variable">$mode</span> <span class="token operator">=</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">print</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$mode</span></span> &lt;br /&gt;&quot;</span><span class="token punctuation">;</span>

    <span class="token variable">$mode</span> <span class="token operator">=</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">print</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$mode</span></span> &lt;br /&gt;&quot;</span><span class="token punctuation">;</span>

    <span class="token variable">$mode</span> <span class="token operator">=</span> <span class="token function">prev</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">print</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$mode</span></span> &lt;br /&gt;&quot;</span><span class="token punctuation">;</span>

    <span class="token function">print_r</span> <span class="token punctuation">(</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print_r</span> <span class="token punctuation">(</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// plane</span>
    <span class="token comment">// foot</span>
    <span class="token comment">// foot</span>
    <span class="token comment">// bike</span>
    <span class="token comment">// foot</span>

    <span class="token comment">// Array ( [1] =&gt; foot [value] =&gt; foot [0] =&gt; 0 [key] =&gt; 0 )</span>
    <span class="token comment">// Array ( [1] =&gt; bike [value] =&gt; bike [0] =&gt; 1 [key] =&gt; 1 )</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function k(g,v){const t=p("ExternalLinkIcon");return o(),i("div",null,[u,n("p",null,[s("參考"),n("a",r,[s("Day 12 _ 小心燙口 extract function"),l(t)])]),d])}const b=e(c,[["render",k],["__file","03.html.vue"]]);export{b as default};
