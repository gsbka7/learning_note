import{_ as e,p as a,q as s,a1 as n}from"./framework-96b046e1.js";const i={},d=n(`<h1 id="_03-【-範例-】" tabindex="-1"><a class="header-anchor" href="#_03-【-範例-】" aria-hidden="true">#</a> 03 【 範例 】</h1><h2 id="_1-crud" tabindex="-1"><a class="header-anchor" href="#_1-crud" aria-hidden="true">#</a> 1. CRUD</h2><h4 id="_1-進入my-test資料庫" tabindex="-1"><a class="header-anchor" href="#_1-進入my-test資料庫" aria-hidden="true">#</a> 1. 進入my_test資料庫</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>user my_test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-向資料庫的user集合中插入一個文件" tabindex="-1"><a class="header-anchor" href="#_2-向資料庫的user集合中插入一個文件" aria-hidden="true">#</a> 2. 向資料庫的user集合中插入一個文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.insert({
    username: &quot;username1&quot;
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-查詢user集合中的文件" tabindex="-1"><a class="header-anchor" href="#_3-查詢user集合中的文件" aria-hidden="true">#</a> 3. 查詢user集合中的文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.find()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-向資料庫的user集合中插入一個文件" tabindex="-1"><a class="header-anchor" href="#_4-向資料庫的user集合中插入一個文件" aria-hidden="true">#</a> 4. 向資料庫的user集合中插入一個文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.insert({
    username: &quot;username2&quot;
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-查詢user集合中的文件" tabindex="-1"><a class="header-anchor" href="#_5-查詢user集合中的文件" aria-hidden="true">#</a> 5. 查詢user集合中的文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.find()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_6-統計資料庫user集合中的文件數量" tabindex="-1"><a class="header-anchor" href="#_6-統計資料庫user集合中的文件數量" aria-hidden="true">#</a> 6. 統計資料庫user集合中的文件數量</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.find().count()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_7-查詢資料庫user集合中username為username1的文件" tabindex="-1"><a class="header-anchor" href="#_7-查詢資料庫user集合中username為username1的文件" aria-hidden="true">#</a> 7. 查詢資料庫user集合中username為username1的文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.find({username: &quot;username1&quot;})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_8-向資料庫user集合中的username為username1的文件-增加一個address屬性-屬性值為address1" tabindex="-1"><a class="header-anchor" href="#_8-向資料庫user集合中的username為username1的文件-增加一個address屬性-屬性值為address1" aria-hidden="true">#</a> 8. 向資料庫user集合中的username為username1的文件，增加一個address屬性，屬性值為address1</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.update({username: &quot;username1&quot;}, {$set:{address: &quot;address1&quot;}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_9-使用-username-username2-替換username為username3的文件" tabindex="-1"><a class="header-anchor" href="#_9-使用-username-username2-替換username為username3的文件" aria-hidden="true">#</a> 9. 使用{username: &quot;username2&quot;}替換username為username3的文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.replaceOne({username: &quot;username2&quot;}, {username: &quot;username3&quot;})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_10-刪除username為username1的文件內的address屬性" tabindex="-1"><a class="header-anchor" href="#_10-刪除username為username1的文件內的address屬性" aria-hidden="true">#</a> 10. 刪除username為username1的文件內的address屬性</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.update({username: &quot;username1&quot;}, {$unset:{address: 1}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_11-向username為username1的文件新增一個hobby-cities-city1-city2-city3-movies-movie1-movie2-movie3" tabindex="-1"><a class="header-anchor" href="#_11-向username為username1的文件新增一個hobby-cities-city1-city2-city3-movies-movie1-movie2-movie3" aria-hidden="true">#</a> 11. 向username為username1的文件新增一個hobby:{cities:[&quot;city1&quot;, &quot;city2&quot;, &quot;city3&quot;], movies:[&quot;movie1&quot;, &quot;movie2&quot;, &quot;movie3&quot;]}</h4><blockquote><p>MongoDB的文件的屬性值也可以是一個文件，稱為內嵌文件</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.update({username: &quot;username1&quot;}, {$set:{hobby:{cities:[&quot;city1&quot;, &quot;city2&quot;, &quot;city3&quot;], movies:[&quot;movie1&quot;, &quot;movie2&quot;, &quot;movie3&quot;]}}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_12-向username為username3的文件中-新增一個hobby-movies-movie1-movie2-movie3" tabindex="-1"><a class="header-anchor" href="#_12-向username為username3的文件中-新增一個hobby-movies-movie1-movie2-movie3" aria-hidden="true">#</a> 12. 向username為username3的文件中，新增一個hobby:{movies:[&quot;movie1&quot;, &quot;movie2&quot;, &quot;movie3&quot;]}</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token keyword">update</span><span class="token punctuation">(</span>{username: <span class="token string">&quot;username3&quot;</span>}<span class="token punctuation">,</span> {$<span class="token keyword">set</span>:{hobby:{movies:<span class="token punctuation">[</span><span class="token string">&quot;movie1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;movie2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;movie3&quot;</span><span class="token punctuation">]</span>}}}<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_13-查詢movie為moive的文件" tabindex="-1"><a class="header-anchor" href="#_13-查詢movie為moive的文件" aria-hidden="true">#</a> 13. 查詢movie為moive的文件</h4><blockquote><p>MongoDB支持通過.的形式直接對內嵌文件的屬性進行查詢</p><p>如果要通過內嵌文件對文件進行查詢，屬性名必須使用引號(單雙皆可)</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.find({&quot;hobby.movies&quot;: &quot;movie1&quot;})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_14-向username1的hobby-moives屬性中新增一個movies4" tabindex="-1"><a class="header-anchor" href="#_14-向username1的hobby-moives屬性中新增一個movies4" aria-hidden="true">#</a> 14. 向username1的hobby.moives屬性中新增一個movies4</h4><blockquote><p>$push：向陣列中增加一個新的元素</p><p>$addToSet：向陣列中增加一個新的元素，如果元素已經存在，則不會增加</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.update({username: &quot;username1&quot;}, {$push:{&quot;hobby.movies&quot;: &quot;movie4&quot;}})

db.users.update({username: &quot;username1&quot;}, {$addToSet:{&quot;hobby.movies&quot;: &quot;movie4&quot;}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_15-刪除喜歡movie4的使用者" tabindex="-1"><a class="header-anchor" href="#_15-刪除喜歡movie4的使用者" aria-hidden="true">#</a> 15. 刪除喜歡movie4的使用者</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.remove({&quot;hobby.movies&quot;: &quot;movie4&quot;})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_16-刪除user集合" tabindex="-1"><a class="header-anchor" href="#_16-刪除user集合" aria-hidden="true">#</a> 16. 刪除user集合</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.users.remove({})

db.users.drop();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-條件查詢" tabindex="-1"><a class="header-anchor" href="#_2-條件查詢" aria-hidden="true">#</a> 2. 條件查詢</h2><h4 id="_1-向numbers中寫入20000萬條資料" tabindex="-1"><a class="header-anchor" href="#_1-向numbers中寫入20000萬條資料" aria-hidden="true">#</a> 1. 向numbers中寫入20000萬條資料</h4><blockquote><p>調用資料庫20000次，效率低</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>for(var i = 1; i &lt;= 20000; i++){
    db.numbers.insert({num:i})
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>將資料處理好在寫入資料庫，效率高</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var arr = []

for(var i = 1; i &lt;= 20000; i++){
    arr.push({num:i})
}
db.numbers.insert(arr)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-查詢numbers中num為500的文件" tabindex="-1"><a class="header-anchor" href="#_2-查詢numbers中num為500的文件" aria-hidden="true">#</a> 2. 查詢numbers中num為500的文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.numbers.find({num: 500})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-查詢numbers中大於500的文件" tabindex="-1"><a class="header-anchor" href="#_3-查詢numbers中大於500的文件" aria-hidden="true">#</a> 3. 查詢numbers中大於500的文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.numbers.find({num:{$gt:500}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-查詢numbers中小於30的文件" tabindex="-1"><a class="header-anchor" href="#_4-查詢numbers中小於30的文件" aria-hidden="true">#</a> 4. 查詢numbers中小於30的文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.numbers.find({num:{$lt:30}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-查詢numbers中大於40小於50的文件" tabindex="-1"><a class="header-anchor" href="#_5-查詢numbers中大於40小於50的文件" aria-hidden="true">#</a> 5. 查詢numbers中大於40小於50的文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.numbers.find({num:{$gt:40, $lt:50}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_6-查詢numbers中大於19996的文件" tabindex="-1"><a class="header-anchor" href="#_6-查詢numbers中大於19996的文件" aria-hidden="true">#</a> 6. 查詢numbers中大於19996的文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.numbers.find({num:{$gt:19996}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_7-查詢numbers集合中的前10條資料" tabindex="-1"><a class="header-anchor" href="#_7-查詢numbers集合中的前10條資料" aria-hidden="true">#</a> 7. 查詢numbers集合中的前10條資料</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.numbers.find({num:{$lte:10}})

// limit(10)：設定顯示資料的上限
db.numbers.find().limit(10)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><blockquote><p>在開發時不會執行不帶條件的查詢，因為會查詢完所有資料</p></blockquote><p>db.numbers.find()</p></div><h4 id="_8-查詢numbers集合中的第11條到20條資料" tabindex="-1"><a class="header-anchor" href="#_8-查詢numbers集合中的第11條到20條資料" aria-hidden="true">#</a> 8. 查詢numbers集合中的第11條到20條資料</h4><p>skip()：省略指定數量的資料</p><p>skip((頁碼 - 1) * 每頁的顯示數)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.numbers.find().skip(10).limit(10)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><blockquote><p>MongoDB會自動調整skip()與limit()的位置</p></blockquote><p>// 結果相同 db.numbers.find().skip().limit() db.numbers.find().limit().skip()</p></div><h4 id="_9-查詢numbers集合中的第21條到30條資料" tabindex="-1"><a class="header-anchor" href="#_9-查詢numbers集合中的第21條到30條資料" aria-hidden="true">#</a> 9. 查詢numbers集合中的第21條到30條資料</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.numbers.find().skip(20).limit(10)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_10-查詢numbers中大於199或小於1999的文件" tabindex="-1"><a class="header-anchor" href="#_10-查詢numbers中大於199或小於1999的文件" aria-hidden="true">#</a> 10. 查詢numbers中大於199或小於1999的文件</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.numbers.find({$or:[{num:{$lt: 199}},{num:{$gt:1999}}]})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,65),r=[d];function t(u,l){return a(),s("div",null,r)}const m=e(i,[["render",t],["__file","03.html.vue"]]);export{m as default};
